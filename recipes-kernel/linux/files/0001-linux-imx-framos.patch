From 86158d6f9c2b984767562bf8067cdc96c3da47b2 Mon Sep 17 00:00:00 2001
From: Matija Jurisic <m.jurisic@framos.com>
Date: Wed, 4 Sep 2024 14:43:51 +0200
Subject: [PATCH] Add IMX662, IMX676, IMX678 and IMX900

---
 arch/arm64/boot/dts/freescale/Makefile        |   8 +
 .../freescale/imx8mp-evk-imx662-dual-gmsl.dts | 244 +++++++++++++++++
 .../dts/freescale/imx8mp-evk-imx662-dual.dts  | 189 ++++++++++++++
 .../dts/freescale/imx8mp-evk-imx662-gmsl.dts  | 139 ++++++++++
 .../boot/dts/freescale/imx8mp-evk-imx662.dts  | 112 ++++++++
 .../freescale/imx8mp-evk-imx676-dual-gmsl.dts | 245 ++++++++++++++++++
 .../dts/freescale/imx8mp-evk-imx676-dual.dts  | 189 ++++++++++++++
 .../dts/freescale/imx8mp-evk-imx676-gmsl.dts  | 139 ++++++++++
 .../boot/dts/freescale/imx8mp-evk-imx676.dts  | 112 ++++++++
 .../freescale/imx8mp-evk-imx678-dual-gmsl.dts | 245 ++++++++++++++++++
 .../dts/freescale/imx8mp-evk-imx678-dual.dts  | 189 ++++++++++++++
 .../dts/freescale/imx8mp-evk-imx678-gmsl.dts  | 139 ++++++++++
 .../boot/dts/freescale/imx8mp-evk-imx678.dts  | 112 ++++++++
 .../freescale/imx8mp-evk-imx900-dual-gmsl.dts | 235 +++++++++++++++++
 .../dts/freescale/imx8mp-evk-imx900-dual.dts  | 179 +++++++++++++
 .../dts/freescale/imx8mp-evk-imx900-gmsl.dts  | 139 ++++++++++
 .../boot/dts/freescale/imx8mp-evk-imx900.dts  | 112 ++++++++
 17 files changed, 2727 insertions(+)
 create mode 100644 arch/arm64/boot/dts/freescale/imx8mp-evk-imx662-dual-gmsl.dts
 create mode 100644 arch/arm64/boot/dts/freescale/imx8mp-evk-imx662-dual.dts
 create mode 100755 arch/arm64/boot/dts/freescale/imx8mp-evk-imx662-gmsl.dts
 create mode 100644 arch/arm64/boot/dts/freescale/imx8mp-evk-imx662.dts
 create mode 100644 arch/arm64/boot/dts/freescale/imx8mp-evk-imx676-dual-gmsl.dts
 create mode 100644 arch/arm64/boot/dts/freescale/imx8mp-evk-imx676-dual.dts
 create mode 100644 arch/arm64/boot/dts/freescale/imx8mp-evk-imx676-gmsl.dts
 create mode 100644 arch/arm64/boot/dts/freescale/imx8mp-evk-imx676.dts
 create mode 100644 arch/arm64/boot/dts/freescale/imx8mp-evk-imx678-dual-gmsl.dts
 create mode 100644 arch/arm64/boot/dts/freescale/imx8mp-evk-imx678-dual.dts
 create mode 100644 arch/arm64/boot/dts/freescale/imx8mp-evk-imx678-gmsl.dts
 create mode 100644 arch/arm64/boot/dts/freescale/imx8mp-evk-imx678.dts
 create mode 100644 arch/arm64/boot/dts/freescale/imx8mp-evk-imx900-dual-gmsl.dts
 create mode 100644 arch/arm64/boot/dts/freescale/imx8mp-evk-imx900-dual.dts
 create mode 100644 arch/arm64/boot/dts/freescale/imx8mp-evk-imx900-gmsl.dts
 create mode 100644 arch/arm64/boot/dts/freescale/imx8mp-evk-imx900.dts

diff --git a/arch/arm64/boot/dts/freescale/Makefile b/arch/arm64/boot/dts/freescale/Makefile
index 025a2a8b0739..8c60b731d370 100644
--- a/arch/arm64/boot/dts/freescale/Makefile
+++ b/arch/arm64/boot/dts/freescale/Makefile
@@ -123,6 +123,14 @@ dtb-$(CONFIG_ARCH_MXC) += imx8mp-evk.dtb imx8mp-evk-rm67191.dtb imx8mp-evk-it626
 			  imx8mp-evk-sof-wm8960.dtb imx8mp-evk-sof-pdm.dtb \
 			  imx8mp-evk-os08a20-ov5640.dtb imx8mp-evk-os08a20.dtb \
 			  imx8mp-evk-dual-os08a20.dtb \
+			  imx8mp-evk-imx662.dtb imx8mp-evk-imx662-dual.dtb \
+			  imx8mp-evk-imx662-gmsl.dtb imx8mp-evk-imx662-dual-gmsl.dtb\
+			  imx8mp-evk-imx676.dtb imx8mp-evk-imx676-dual.dtb \
+			  imx8mp-evk-imx676-gmsl.dtb imx8mp-evk-imx676-dual-gmsl.dtb\
+			  imx8mp-evk-imx678.dtb imx8mp-evk-imx678-dual.dtb \
+			  imx8mp-evk-imx678-gmsl.dtb imx8mp-evk-imx678-dual-gmsl.dtb\
+			  imx8mp-evk-imx900.dtb imx8mp-evk-imx900-dual.dtb\
+			  imx8mp-evk-imx900-gmsl.dtb imx8mp-evk-imx900-dual-gmsl.dtb\
 			  imx8mp-evk-iqaudio-dacplus.dtb imx8mp-evk-iqaudio-dacpro.dtb imx8mp-evk-hifiberry-dacplus.dtb \
 			  imx8mp-evk-hifiberry-dac2.dtb imx8mp-evk-hifiberry-dacplusadc.dtb \
 			  imx8mp-evk-usdhc1-m2.dtb imx8mp-evk-rm67199.dtb \
diff --git a/arch/arm64/boot/dts/freescale/imx8mp-evk-imx662-dual-gmsl.dts b/arch/arm64/boot/dts/freescale/imx8mp-evk-imx662-dual-gmsl.dts
new file mode 100644
index 000000000000..c7f596643095
--- /dev/null
+++ b/arch/arm64/boot/dts/freescale/imx8mp-evk-imx662-dual-gmsl.dts
@@ -0,0 +1,244 @@
+// SPDX-License-Identifier: (GPL-2.0+ OR MIT)
+/*
+ * Copyright 2024 Framos
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License
+ * as published by the Free Software Foundation; either version 2
+ * of the License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ */
+
+/dts-v1/;
+
+#include "imx8mp-evk.dts"
+
+#define CAMERA_I2C_MUX_BUS(x) (0x1E + x)
+
+/* TCA6408 Pxx bus-port define*/
+#define SLAMODE0	0
+
+/delete-node/ &flexcan2; //flexcan2 enable signal in collision with GPIO expander on Framos FPA
+
+&i2c2 {
+	/delete-node/ov5640_mipi@3c;
+
+	tca9548_70_CSI1: tca9548@70 {
+		compatible = "nxp,pca9548";
+		reg = <0x70>;
+		#address-cells = <1>;
+		#size-cells = <0>;
+		skip_mux_detect;
+		force_bus_start = <CAMERA_I2C_MUX_BUS(0)>;
+
+		i2c@0 {
+			reg = <0>;
+			i2c-mux,deselect-on-exit;
+			#address-cells = <1>;
+			#size-cells = <0>;
+			status = "okay";
+
+			framos_dser_a: max96792_a@6a {
+				compatible = "framos,max96792";
+				reg = <0x6a>;
+				csi-mode = "2x4";
+				max-src = <1>;
+				reset-gpios = <&gpio1 6 GPIO_ACTIVE_LOW>;
+			};
+			framos_ser_prim_a: max96793_prim_a@42 { //i2c serializer physical address
+				compatible = "framos,max96793";
+				reg = <0x42>;
+				gmsl-dser-device = <&framos_dser_a>;
+				is-prim-ser;
+			};
+
+			imx662_0: imx662_mipi@1a {
+				compatible = "framos,imx662";
+				reg = <0x1a>;
+				def-addr = <0x1a>;
+				gmsl = "gmsl";
+				pinctrl-names = "default";
+				pinctrl-0 = <&pinctrl_csi0_pwn>, <&pinctrl_csi0_rst>, <&pinctrl_csi_mclk>;
+				clocks = <&clk IMX8MP_CLK_IPP_DO_CLKO2>;
+				clock-names = "csi_mclk";
+				gmsl-ser-device = <&framos_ser_prim_a>;
+				gmsl-dser-device = <&framos_dser_a>;
+				csi_id = <0>;
+				mipi_csi;
+				status = "okay";
+
+				port {
+					imx662_mipi_0_ep: endpoint {
+						remote-endpoint = <&mipi_csi0_ep>;
+						data-lanes = <1 2 3 4>;
+						clock-lanes = <0>;
+						max-pixel-frequency = /bits/ 64 <266000000>;
+					};
+				};
+				gmsl-link {
+					src-csi-port = "b";
+					dst-csi-port = "a";
+					serdes-csi-link = "a";
+					csi-mode = "1x4";
+					st-vc = <0>;
+					vc-id = <0>;
+					num-lanes = <4>;
+					streams = "raw12";
+				};
+			};
+		};
+	};
+};
+
+&i2c3 {
+	clock-frequency = <100000>;
+	pinctrl-names = "default";
+	pinctrl-0 = <&pinctrl_i2c3>;
+	status = "okay";
+
+	/delete-node/gpio@20;
+	/delete-node/ov5640_mipi@3c;
+
+	tca9548_70_CSI2: tca9548@70 {
+		compatible = "nxp,pca9548";
+		reg = <0x70>;
+		#address-cells = <1>;
+		#size-cells = <0>;
+		skip_mux_detect;
+		force_bus_start = <CAMERA_I2C_MUX_BUS(0)>;
+
+		i2c@0 {
+			reg = <0>;
+			i2c-mux,deselect-on-exit;
+			#address-cells = <1>;
+			#size-cells = <0>;
+			status = "okay";
+
+			framos_dser_b: max96792_b@6a {
+				compatible = "framos,max96792";
+				reg = <0x6a>;
+				csi-mode = "2x4";
+				max-src = <1>;
+				reset-gpios = <&gpio1 6 GPIO_ACTIVE_LOW>;
+			};
+			framos_ser_prim_b: max96793_prim_b@42 { //i2c serializer physical address
+				compatible = "framos,max96793";
+				reg = <0x42>;
+				gmsl-dser-device = <&framos_dser_b>;
+				is-prim-ser;
+			};
+
+			tca6408_21_i2c0: tca6408@21 {
+				compatible = "ti,tca6408";
+				gpio-controller;
+				#gpio-cells = <2>;
+				reg = <0x21>;
+				status = "okay";
+				/*
+		 		* P2: SLAMODE0
+		 		*/
+			tca6408_21_i2c0_slamode0 {
+				gpio-hog;
+				output-high;
+				gpios = <SLAMODE0 0>;
+				label = "slamode0";
+				status = "okay";
+			};
+		};
+
+		imx662_1: imx662_mipi@10 {
+				compatible = "framos,imx662";
+				reg = <0x10>;
+				def-addr = <0x10>;
+				gmsl = "gmsl";
+				clocks = <&clk IMX8MP_CLK_IPP_DO_CLKO2>;
+				clock-names = "csi_mclk";
+				gmsl-ser-device = <&framos_ser_prim_b>;
+				gmsl-dser-device = <&framos_dser_b>;
+				csi_id = <1>;
+				status = "okay";
+
+				port {
+					imx662_mipi_1_ep: endpoint {
+						remote-endpoint = <&mipi_csi1_ep>;
+						data-lanes = <1 2 3 4>;
+						clock-lanes = <0>;
+						max-pixel-frequency = /bits/ 64 <266000000>;
+					};
+				};
+			gmsl-link {
+				src-csi-port = "b";
+				dst-csi-port = "a";
+				serdes-csi-link = "a";
+				csi-mode = "1x4";
+				st-vc = <0>;
+				vc-id = <0>;
+				num-lanes = <4>;
+				streams = "raw12";
+				};
+			};
+		};
+	};
+};
+
+&cameradev {
+	status = "okay";
+};
+
+&isi_0 {
+	status = "disabled";
+};
+
+&isi_1 {
+	status = "disabled";
+};
+
+&isp_0 {
+	status = "okay";
+};
+
+&isp_1 {
+	status = "okay";
+};
+
+&dewarp {
+	status = "okay";
+};
+
+&mipi_csi_0 {
+	status = "okay";
+	clock-frequency = <266000000>;
+	assigned-clock-parents = <&clk IMX8MP_SYS_PLL1_266M>;
+	assigned-clock-rates = <266000000>;
+
+	port {
+		mipi_csi0_ep: endpoint {
+			remote-endpoint = <&imx662_mipi_0_ep>;
+			data-lanes = <4>;
+			csis-hs-settle = <13>;
+			csis-clk-settle = <2>;
+			csis-wclk;
+		};
+	};
+};
+
+&mipi_csi_1 {
+	#address-cells = <1>;
+	#size-cells = <0>;
+	status = "okay";
+
+	port@1 {
+		reg = <1>;
+		mipi_csi1_ep: endpoint {
+			remote-endpoint = <&imx662_mipi_1_ep>;
+			data-lanes = <4>;
+			csis-hs-settle = <13>;
+			csis-clk-settle = <2>;
+			csis-wclk;
+		};
+	};
+};
diff --git a/arch/arm64/boot/dts/freescale/imx8mp-evk-imx662-dual.dts b/arch/arm64/boot/dts/freescale/imx8mp-evk-imx662-dual.dts
new file mode 100644
index 000000000000..1e4acd6dc21e
--- /dev/null
+++ b/arch/arm64/boot/dts/freescale/imx8mp-evk-imx662-dual.dts
@@ -0,0 +1,189 @@
+// SPDX-License-Identifier: (GPL-2.0+ OR MIT)
+/*
+ * Copyright 2024 Framos
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License
+ * as published by the Free Software Foundation; either version 2
+ * of the License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ */
+
+/dts-v1/;
+
+#include "imx8mp-evk.dts"
+
+#define CAMERA_I2C_MUX_BUS(x) (0x1E + x)
+
+/* TCA6408 Pxx bus-port define*/
+#define SLAMODE0	0
+
+/delete-node/ &flexcan2; //flexcan2 enable signal in collision with GPIO expander on Framos FPA
+
+&i2c2 {
+	/delete-node/ov5640_mipi@3c;
+
+	tca9548_70_CSI1: tca9548@70 {
+		compatible = "nxp,pca9548";
+		reg = <0x70>;
+		#address-cells = <1>;
+		#size-cells = <0>;
+		skip_mux_detect;
+		force_bus_start = <CAMERA_I2C_MUX_BUS(0)>;
+
+		i2c@0 {
+			reg = <0>;
+			i2c-mux,deselect-on-exit;
+			#address-cells = <1>;
+			#size-cells = <0>;
+			status = "okay";
+
+			imx662_0: imx662_mipi@1a {
+				compatible = "framos,imx662";
+				reg = <0x1a>;
+				pinctrl-names = "default";
+				pinctrl-0 = <&pinctrl_csi0_pwn>, <&pinctrl_csi0_rst>, <&pinctrl_csi_mclk>;
+				clocks = <&clk IMX8MP_CLK_IPP_DO_CLKO2>;
+				clock-names = "csi_mclk";
+				csi_id = <0>;
+				rst-gpios = <&gpio1 6 GPIO_ACTIVE_LOW>;
+				status = "okay";
+
+				port {
+					imx662_mipi_0_ep: endpoint {
+						remote-endpoint = <&mipi_csi0_ep>;
+						data-lanes = <1 2 3 4>;
+						clock-lanes = <0>;
+						max-pixel-frequency = /bits/ 64 <266000000>;
+					};
+				};
+			};
+		};
+	};
+};
+
+&i2c3 {
+	clock-frequency = <100000>;
+	pinctrl-names = "default";
+	pinctrl-0 = <&pinctrl_i2c3>;
+	status = "okay";
+
+	/delete-node/gpio@20;
+	/delete-node/ov5640_mipi@3c;
+
+	tca9548_70_CSI2: tca9548@70 {
+		compatible = "nxp,pca9548";
+		reg = <0x70>;
+		#address-cells = <1>;
+		#size-cells = <0>;
+		skip_mux_detect;
+		force_bus_start = <CAMERA_I2C_MUX_BUS(0)>;
+
+		i2c@0 {
+			reg = <0>;
+			i2c-mux,deselect-on-exit;
+			#address-cells = <1>;
+			#size-cells = <0>;
+			status = "okay";
+
+			tca6408_20_i2c0: tca6408@20 {
+				compatible = "ti,tca6408";
+				gpio-controller;
+				#gpio-cells = <2>;
+				reg = <0x20>;
+				status = "okay";
+				/*
+				 * P2: SLAMODE0
+				 */
+				tca6408_20_i2c0_slamode0 {
+					gpio-hog;
+					output-high;
+					gpios = <SLAMODE0 0>;
+					label = "slamode0";
+					status = "okay";
+				};
+			};
+
+			imx662_1: imx662_mipi@10 {
+				compatible = "framos,imx662";
+				reg = <0x10>;
+				clocks = <&clk IMX8MP_CLK_IPP_DO_CLKO2>;
+				clock-names = "csi_mclk";
+				csi_id = <1>;
+				rst-gpios = <&gpio1 6 GPIO_ACTIVE_LOW>;
+				status = "okay";
+
+				port {
+					imx662_mipi_1_ep: endpoint {
+						remote-endpoint = <&mipi_csi1_ep>;
+						data-lanes = <1 2 3 4>;
+						clock-lanes = <0>;
+						max-pixel-frequency = /bits/ 64 <266000000>;
+					};
+				};
+			};
+		};
+	};
+};
+
+&cameradev {
+	status = "okay";
+};
+
+&isi_0 {
+	status = "disabled";
+};
+
+&isi_1 {
+	status = "disabled";
+};
+
+&isp_0 {
+	status = "okay";
+};
+
+&isp_1 {
+	status = "okay";
+};
+
+&dewarp {
+	status = "okay";
+};
+
+&mipi_csi_0 {
+	status = "okay";
+	clock-frequency = <266000000>;
+	assigned-clock-parents = <&clk IMX8MP_SYS_PLL1_266M>;
+	assigned-clock-rates = <266000000>;
+
+	port {
+		mipi_csi0_ep: endpoint {
+			remote-endpoint = <&imx662_mipi_0_ep>;
+			data-lanes = <4>;
+			csis-hs-settle = <13>;
+			csis-clk-settle = <2>;
+			csis-wclk;
+		};
+	};
+};
+
+&mipi_csi_1 {
+	#address-cells = <1>;
+	#size-cells = <0>;
+	status = "okay";
+
+	port@1 {
+		reg = <1>;
+		mipi_csi1_ep: endpoint {
+			remote-endpoint = <&imx662_mipi_1_ep>;
+			data-lanes = <4>;
+			csis-hs-settle = <13>;
+			csis-clk-settle = <2>;
+			csis-wclk;
+		};
+	};
+};
diff --git a/arch/arm64/boot/dts/freescale/imx8mp-evk-imx662-gmsl.dts b/arch/arm64/boot/dts/freescale/imx8mp-evk-imx662-gmsl.dts
new file mode 100755
index 000000000000..5d18c0d5f279
--- /dev/null
+++ b/arch/arm64/boot/dts/freescale/imx8mp-evk-imx662-gmsl.dts
@@ -0,0 +1,139 @@
+// SPDX-License-Identifier: (GPL-2.0+ OR MIT)
+/*
+ * Copyright 2024 Framos
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License
+ * as published by the Free Software Foundation; either version 2
+ * of the License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ */
+
+/dts-v1/;
+
+#include "imx8mp-evk.dts"
+
+#define CAMERA_I2C_MUX_BUS(x) (0x1E + x)
+
+&i2c2 {
+	/delete-node/ov5640_mipi@3c;
+
+	tca9548_70_CSI1: tca9548@70 {
+		compatible = "nxp,pca9548";
+		reg = <0x70>;
+		#address-cells = <1>;
+		#size-cells = <0>;
+		skip_mux_detect;
+		force_bus_start = <CAMERA_I2C_MUX_BUS(0)>;
+
+		i2c@0 {
+			reg = <0>;
+			i2c-mux,deselect-on-exit;
+			#address-cells = <1>;
+			#size-cells = <0>;
+			status = "okay";
+
+			framos_dser_a: max96792_a@6a {
+				compatible = "framos,max96792";
+				reg = <0x6a>;
+				csi-mode = "2x4";
+				max-src = <1>;
+				reset-gpios = <&gpio1 6 GPIO_ACTIVE_LOW>;
+			};
+			framos_ser_prim_a: max96793_prim_a@42 { //i2c serializer physical address
+				compatible = "framos,max96793";
+				reg = <0x42>;
+				gmsl-dser-device = <&framos_dser_a>;
+				is-prim-ser;
+			};
+
+			imx662_0: imx662_mipi@1a {
+				compatible = "framos,imx662";
+				reg = <0x1a>;
+				def-addr = <0x1a>;
+				gmsl = "gmsl";
+				pinctrl-names = "default";
+				pinctrl-0 = <&pinctrl_csi0_pwn>, <&pinctrl_csi0_rst>, <&pinctrl_csi_mclk>;
+				clocks = <&clk IMX8MP_CLK_IPP_DO_CLKO2>;
+				clock-names = "csi_mclk";
+				gmsl-ser-device = <&framos_ser_prim_a>;
+				gmsl-dser-device = <&framos_dser_a>;
+				csi_id = <0>;
+				mipi_csi;
+				status = "okay";
+
+				port {
+					imx662_mipi_0_ep: endpoint {
+						remote-endpoint = <&mipi_csi0_ep>;
+						data-lanes = <1 2 3 4>;
+						clock-lanes = <0>;
+						max-pixel-frequency = /bits/ 64 <500000000>;
+					};
+				};
+				gmsl-link {
+					src-csi-port = "b";
+					dst-csi-port = "a";
+					serdes-csi-link = "a";
+					csi-mode = "1x4";
+					st-vc = <0>;
+					vc-id = <0>;
+					num-lanes = <4>;
+					streams = "raw12";
+				};
+			};
+		};
+	};
+};
+
+&i2c3 {
+	clock-frequency = <100000>;
+	pinctrl-names = "default";
+	pinctrl-0 = <&pinctrl_i2c3>;
+	status = "okay";
+
+	ov5640_1: ov5640_mipi@3c {
+		status = "disabled";
+	};
+};
+
+&cameradev {
+	status = "okay";
+};
+
+&isi_0 {
+	status = "disabled";
+};
+
+&isi_1 {
+	status = "disabled";
+};
+
+&isp_0 {
+	status = "okay";
+};
+
+&dewarp {
+	status = "okay";
+};
+
+&mipi_csi_0 {
+	status = "okay";
+
+	port {
+		mipi_csi0_ep: endpoint {
+			remote-endpoint = <&imx662_mipi_0_ep>;
+			data-lanes = <4>;
+			csis-hs-settle = <13>;
+			csis-clk-settle = <2>;
+			csis-wclk;
+		};
+	};
+};
+
+&mipi_csi_1 {
+	status = "disabled";
+};
diff --git a/arch/arm64/boot/dts/freescale/imx8mp-evk-imx662.dts b/arch/arm64/boot/dts/freescale/imx8mp-evk-imx662.dts
new file mode 100644
index 000000000000..8015d713531a
--- /dev/null
+++ b/arch/arm64/boot/dts/freescale/imx8mp-evk-imx662.dts
@@ -0,0 +1,112 @@
+// SPDX-License-Identifier: (GPL-2.0+ OR MIT)
+/*
+ * Copyright 2024 Framos
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License
+ * as published by the Free Software Foundation; either version 2
+ * of the License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ */
+
+/dts-v1/;
+
+#include "imx8mp-evk.dts"
+
+#define CAMERA_I2C_MUX_BUS(x) (0x1E + x)
+
+&i2c2 {
+	/delete-node/ov5640_mipi@3c;
+
+	tca9548_70_CSI1: tca9548@70 {
+		compatible = "nxp,pca9548";
+		reg = <0x70>;
+		#address-cells = <1>;
+		#size-cells = <0>;
+		skip_mux_detect;
+		force_bus_start = <CAMERA_I2C_MUX_BUS(0)>;
+
+		i2c@0 {
+			reg = <0>;
+			i2c-mux,deselect-on-exit;
+			#address-cells = <1>;
+			#size-cells = <0>;
+			status = "okay";
+
+			imx662_0: imx662_mipi@1a {
+				compatible = "framos,imx662";
+				reg = <0x1a>;
+				pinctrl-names = "default";
+				pinctrl-0 = <&pinctrl_csi0_pwn>, <&pinctrl_csi0_rst>, <&pinctrl_csi_mclk>;
+				clocks = <&clk IMX8MP_CLK_IPP_DO_CLKO2>;
+				clock-names = "csi_mclk";
+				csi_id = <0>;
+				rst-gpios = <&gpio1 6 GPIO_ACTIVE_LOW>;
+				mipi_csi;
+				status = "okay";
+
+				port {
+					imx662_mipi_0_ep: endpoint {
+						remote-endpoint = <&mipi_csi0_ep>;
+						data-lanes = <1 2 3 4>;
+						clock-lanes = <0>;
+						max-pixel-frequency = /bits/ 64 <500000000>;
+					};
+				};
+			};
+		};
+	};
+};
+
+&i2c3 {
+	clock-frequency = <100000>;
+	pinctrl-names = "default";
+	pinctrl-0 = <&pinctrl_i2c3>;
+	status = "okay";
+
+	ov5640_1: ov5640_mipi@3c {
+		status = "disabled";
+	};
+};
+
+&cameradev {
+	status = "okay";
+};
+
+&isi_0 {
+	status = "disabled";
+};
+
+&isi_1 {
+	status = "disabled";
+};
+
+&isp_0 {
+	status = "okay";
+};
+
+&dewarp {
+	status = "okay";
+};
+
+&mipi_csi_0 {
+	status = "okay";
+
+	port {
+		mipi_csi0_ep: endpoint {
+			remote-endpoint = <&imx662_mipi_0_ep>;
+			data-lanes = <4>;
+			csis-hs-settle = <13>;
+			csis-clk-settle = <2>;
+			csis-wclk;
+		};
+	};
+};
+
+&mipi_csi_1 {
+	status = "disabled";
+};
diff --git a/arch/arm64/boot/dts/freescale/imx8mp-evk-imx676-dual-gmsl.dts b/arch/arm64/boot/dts/freescale/imx8mp-evk-imx676-dual-gmsl.dts
new file mode 100644
index 000000000000..e05a5042ad77
--- /dev/null
+++ b/arch/arm64/boot/dts/freescale/imx8mp-evk-imx676-dual-gmsl.dts
@@ -0,0 +1,245 @@
+// SPDX-License-Identifier: (GPL-2.0+ OR MIT)
+/*
+ * Copyright 2020 NXP
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License
+ * as published by the Free Software Foundation; either version 2
+ * of the License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ */
+
+/dts-v1/;
+
+#include "imx8mp-evk.dts"
+
+#define CAMERA_I2C_MUX_BUS(x) (0x1E + x)
+
+/* TCA6408 Pxx bus-port define*/
+#define SLAMODE0	0
+
+/delete-node/ &flexcan2; /* flexcan2 enable signal in collision with GPIO expander on Framos FPA */
+
+&i2c2 {
+	/delete-node/ov5640_mipi@3c;
+
+	tca9548_70_CSI1: tca9548@70 {
+		compatible = "nxp,pca9548";
+		reg = <0x70>;
+		#address-cells = <1>;
+		#size-cells = <0>;
+		skip_mux_detect;
+		force_bus_start = <CAMERA_I2C_MUX_BUS(0)>;
+
+		i2c@0 {
+			reg = <0>;
+			i2c-mux,deselect-on-exit;
+			#address-cells = <1>;
+			#size-cells = <0>;
+			status = "okay";
+
+			framos_dser_a: max96792_a@6a {
+				compatible = "framos,max96792";
+				reg = <0x6a>;
+				csi-mode = "2x4";
+				max-src = <1>;
+				reset-gpios = <&gpio1 6 GPIO_ACTIVE_LOW>;
+			};
+			framos_ser_prim_a: max96793_prim_a@42 { /* i2c serializer physical address */
+				compatible = "framos,max96793";
+				reg = <0x42>;
+				gmsl-dser-device = <&framos_dser_a>;
+				is-prim-ser;
+			};
+
+			imx676_0: imx676_mipi@1a {
+				compatible = "framos,imx676";
+				reg = <0x1a>;
+				def-addr = <0x1a>;
+				gmsl = "gmsl";
+				pinctrl-names = "default";
+				pinctrl-0 = <&pinctrl_csi0_pwn>, <&pinctrl_csi0_rst>, <&pinctrl_csi_mclk>;
+				clocks = <&clk IMX8MP_CLK_IPP_DO_CLKO2>;
+				clock-names = "csi_mclk";
+				gmsl-ser-device = <&framos_ser_prim_a>;
+				gmsl-dser-device = <&framos_dser_a>;
+				csi_id = <0>;
+				mipi_csi;
+				status = "okay";
+
+				port {
+					imx676_mipi_0_ep: endpoint {
+						remote-endpoint = <&mipi_csi0_ep>;
+						data-lanes = <1 2 3 4>;
+						clock-lanes = <0>;
+						max-pixel-frequency = /bits/ 64 <266000000>;
+					};
+				};
+				gmsl-link {
+					src-csi-port = "b";
+					dst-csi-port = "a";
+					serdes-csi-link = "a";
+					csi-mode = "1x4";
+					st-vc = <0>;
+					vc-id = <0>;
+					num-lanes = <4>;
+					streams = "raw12";
+				};
+			};
+		};
+	};
+};
+
+&i2c3 {
+	clock-frequency = <100000>;
+	pinctrl-names = "default";
+	pinctrl-0 = <&pinctrl_i2c3>;
+	status = "okay";
+
+	/delete-node/gpio@20;
+	/delete-node/ov5640_mipi@3c;
+
+	tca9548_70_CSI2: tca9548@70 {
+		compatible = "nxp,pca9548";
+		reg = <0x70>;
+		#address-cells = <1>;
+		#size-cells = <0>;
+		skip_mux_detect;
+		force_bus_start = <CAMERA_I2C_MUX_BUS(0)>;
+
+		i2c@0 {
+			reg = <0>;
+			i2c-mux,deselect-on-exit;
+			#address-cells = <1>;
+			#size-cells = <0>;
+			status = "okay";
+
+			framos_dser_b: max96792_b@6a {
+				compatible = "framos,max96792";
+				reg = <0x6a>;
+				csi-mode = "2x4";
+				max-src = <1>;
+				reset-gpios = <&gpio1 6 GPIO_ACTIVE_LOW>;
+			};
+			framos_ser_prim_b: max96793_prim_b@42 { /* i2c serializer physical address */
+				compatible = "framos,max96793";
+				reg = <0x42>;
+				gmsl-dser-device = <&framos_dser_b>;
+				is-prim-ser;
+			};
+
+			tca6408_21_i2c0: tca6408@21 {
+				compatible = "ti,tca6408";
+				gpio-controller;
+				#gpio-cells = <2>;
+				reg = <0x21>;
+				status = "okay";
+				/*
+				 * P2: SLAMODE0
+				 */
+				tca6408_21_i2c0_slamode0 {
+					gpio-hog;
+					output-high;
+					gpios = <SLAMODE0 0>;
+					label = "slamode0";
+					status = "okay";
+				};
+			};
+
+			imx676_1: imx676_mipi@10 {
+				compatible = "framos,imx676";
+				reg = <0x10>;
+				def-addr = <0x10>;
+				gmsl = "gmsl";
+				clocks = <&clk IMX8MP_CLK_IPP_DO_CLKO2>;
+				clock-names = "csi_mclk";
+				gmsl-ser-device = <&framos_ser_prim_b>;
+				gmsl-dser-device = <&framos_dser_b>;
+				csi_id = <1>;
+				rst-gpios = <&gpio1 6 GPIO_ACTIVE_LOW>;
+				status = "okay";
+
+				port {
+					imx676_mipi_1_ep: endpoint {
+						remote-endpoint = <&mipi_csi1_ep>;
+						data-lanes = <1 2 3 4>;
+						clock-lanes = <0>;
+						max-pixel-frequency = /bits/ 64 <266000000>;
+					};
+				};
+				gmsl-link {
+					src-csi-port = "b";
+					dst-csi-port = "a";
+					serdes-csi-link = "a";
+					csi-mode = "1x4";
+					st-vc = <0>;
+					vc-id = <0>;
+					num-lanes = <4>;
+					streams = "raw12";
+				};
+			};
+		};
+	};
+};
+
+&cameradev {
+	status = "okay";
+};
+
+&isi_0 {
+	status = "disabled";
+};
+
+&isi_1 {
+	status = "disabled";
+};
+
+&isp_0 {
+	status = "okay";
+};
+
+&isp_1 {
+	status = "okay";
+};
+
+&dewarp {
+	status = "okay";
+};
+
+&mipi_csi_0 {
+	status = "okay";
+	clock-frequency = <266000000>;
+	assigned-clock-parents = <&clk IMX8MP_SYS_PLL1_266M>;
+	assigned-clock-rates = <266000000>;
+
+	port {
+		mipi_csi0_ep: endpoint {
+			remote-endpoint = <&imx676_mipi_0_ep>;
+			data-lanes = <4>;
+			csis-hs-settle = <13>;
+			csis-clk-settle = <2>;
+			csis-wclk;
+		};
+	};
+};
+
+&mipi_csi_1 {
+	#address-cells = <1>;
+	#size-cells = <0>;
+	status = "okay";
+
+	port@1 {
+		reg = <1>;
+		mipi_csi1_ep: endpoint {
+			remote-endpoint = <&imx676_mipi_1_ep>;
+			data-lanes = <4>;
+			csis-hs-settle = <13>;
+			csis-clk-settle = <2>;
+			csis-wclk;
+		};
+	};
+};
diff --git a/arch/arm64/boot/dts/freescale/imx8mp-evk-imx676-dual.dts b/arch/arm64/boot/dts/freescale/imx8mp-evk-imx676-dual.dts
new file mode 100644
index 000000000000..c5ef9501d375
--- /dev/null
+++ b/arch/arm64/boot/dts/freescale/imx8mp-evk-imx676-dual.dts
@@ -0,0 +1,189 @@
+// SPDX-License-Identifier: (GPL-2.0+ OR MIT)
+/*
+ * Copyright 2020 NXP
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License
+ * as published by the Free Software Foundation; either version 2
+ * of the License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ */
+
+/dts-v1/;
+
+#include "imx8mp-evk.dts"
+
+#define CAMERA_I2C_MUX_BUS(x) (0x1E + x)
+
+/* TCA6408 Pxx bus-port define*/
+#define SLAMODE0    0
+
+/delete-node/ &flexcan2; /* flexcan2 enable signal in collision with GPIO expander on Framos FPA */
+
+&i2c2 {
+	/delete-node/ov5640_mipi@3c;
+
+	tca9548_70_CSI1: tca9548@70 {
+		compatible = "nxp,pca9548";
+		reg = <0x70>;
+		#address-cells = <1>;
+		#size-cells = <0>;
+		skip_mux_detect;
+		force_bus_start = <CAMERA_I2C_MUX_BUS(0)>;
+
+		i2c@0 {
+			reg = <0>;
+			i2c-mux,deselect-on-exit;
+			#address-cells = <1>;
+			#size-cells = <0>;
+			status = "okay";
+
+			imx676_0: imx676_mipi@1a {
+				compatible = "framos,imx676";
+				reg = <0x1a>;
+				pinctrl-names = "default";
+				pinctrl-0 = <&pinctrl_csi0_pwn>, <&pinctrl_csi0_rst>, <&pinctrl_csi_mclk>;
+				clocks = <&clk IMX8MP_CLK_IPP_DO_CLKO2>;
+				clock-names = "csi_mclk";
+				csi_id = <0>;
+				rst-gpios = <&gpio1 6 GPIO_ACTIVE_LOW>;
+				status = "okay";
+
+				port {
+					imx676_mipi_0_ep: endpoint {
+						remote-endpoint = <&mipi_csi0_ep>;
+						data-lanes = <1 2 3 4>;
+						clock-lanes = <0>;
+						max-pixel-frequency = /bits/ 64 <266000000>;
+					};
+				};
+			};
+		};
+	};
+};
+
+&i2c3 {
+	clock-frequency = <100000>;
+	pinctrl-names = "default";
+	pinctrl-0 = <&pinctrl_i2c3>;
+	status = "okay";
+
+	/delete-node/gpio@20;
+	/delete-node/ov5640_mipi@3c;
+
+	tca9548_70_CSI2: tca9548@70 {
+		compatible = "nxp,pca9548";
+		reg = <0x70>;
+		#address-cells = <1>;
+		#size-cells = <0>;
+		skip_mux_detect;
+		force_bus_start = <CAMERA_I2C_MUX_BUS(0)>;
+
+		i2c@0 {
+			reg = <0>;
+			i2c-mux,deselect-on-exit;
+			#address-cells = <1>;
+			#size-cells = <0>;
+			status = "okay";
+
+			tca6408_20_i2c0: tca6408@20 {
+				compatible = "ti,tca6408";
+				gpio-controller;
+				#gpio-cells = <2>;
+				reg = <0x20>;
+				status = "okay";
+				/*
+				 * P2: SLAMODE0
+				 */
+				tca6408_20_i2c0_slamode0 {
+					gpio-hog;
+					output-high;
+					gpios = <SLAMODE0 0>;
+					label = "slamode0";
+					status = "okay";
+				};
+			};
+
+			imx676_1: imx676_mipi@10 {
+				compatible = "framos,imx676";
+				reg = <0x10>;
+				clocks = <&clk IMX8MP_CLK_IPP_DO_CLKO2>;
+				clock-names = "csi_mclk";
+				csi_id = <1>;
+				rst-gpios = <&gpio1 6 GPIO_ACTIVE_LOW>;
+				status = "okay";
+
+				port {
+					imx676_mipi_1_ep: endpoint {
+						remote-endpoint = <&mipi_csi1_ep>;
+						data-lanes = <1 2 3 4>;
+						clock-lanes = <0>;
+						max-pixel-frequency = /bits/ 64 <266000000>;
+					};
+				};
+			};
+		};
+	};
+};
+
+&cameradev {
+	status = "okay";
+};
+
+&isi_0 {
+	status = "disabled";
+};
+
+&isi_1 {
+	status = "disabled";
+};
+
+&isp_0 {
+	status = "okay";
+};
+
+&isp_1 {
+	status = "okay";
+};
+
+&dewarp {
+	status = "okay";
+};
+
+&mipi_csi_0 {
+	status = "okay";
+	clock-frequency = <266000000>;
+	assigned-clock-parents = <&clk IMX8MP_SYS_PLL1_266M>;
+	assigned-clock-rates = <266000000>;
+
+	port {
+		mipi_csi0_ep: endpoint {
+			remote-endpoint = <&imx676_mipi_0_ep>;
+			data-lanes = <4>;
+			csis-hs-settle = <13>;
+			csis-clk-settle = <2>;
+			csis-wclk;
+		};
+	};
+};
+
+&mipi_csi_1 {
+	#address-cells = <1>;
+	#size-cells = <0>;
+	status = "okay";
+
+	port@1 {
+		reg = <1>;
+		mipi_csi1_ep: endpoint {
+			remote-endpoint = <&imx676_mipi_1_ep>;
+			data-lanes = <4>;
+			csis-hs-settle = <13>;
+			csis-clk-settle = <2>;
+			csis-wclk;
+		};
+	};
+};
diff --git a/arch/arm64/boot/dts/freescale/imx8mp-evk-imx676-gmsl.dts b/arch/arm64/boot/dts/freescale/imx8mp-evk-imx676-gmsl.dts
new file mode 100644
index 000000000000..d24837971ec0
--- /dev/null
+++ b/arch/arm64/boot/dts/freescale/imx8mp-evk-imx676-gmsl.dts
@@ -0,0 +1,139 @@
+// SPDX-License-Identifier: (GPL-2.0+ OR MIT)
+/*
+ * Copyright 2020 NXP
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License
+ * as published by the Free Software Foundation; either version 2
+ * of the License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ */
+
+/dts-v1/;
+
+#include "imx8mp-evk.dts"
+
+#define CAMERA_I2C_MUX_BUS(x) (0x1E + x)
+
+&i2c2 {
+	/delete-node/ov5640_mipi@3c;
+
+	tca9548_70_CSI1: tca9548@70 {
+		compatible = "nxp,pca9548";
+		reg = <0x70>;
+		#address-cells = <1>;
+		#size-cells = <0>;
+		skip_mux_detect;
+		force_bus_start = <CAMERA_I2C_MUX_BUS(0)>;
+
+		i2c@0 {
+			reg = <0>;
+			i2c-mux,deselect-on-exit;
+			#address-cells = <1>;
+			#size-cells = <0>;
+			status = "okay";
+
+			framos_dser_a: max96792_a@6a {
+				compatible = "framos,max96792";
+				reg = <0x6a>;
+				csi-mode = "2x4";
+				max-src = <1>;
+				reset-gpios = <&gpio1 6 GPIO_ACTIVE_LOW>;
+			};
+			framos_ser_prim_a: max96793_prim_a@42 { /* i2c serializer physical address */
+				compatible = "framos,max96793";
+				reg = <0x42>;
+				gmsl-dser-device = <&framos_dser_a>;
+				is-prim-ser;
+			};
+
+			imx676_0: imx676_mipi@1a {
+				compatible = "framos,imx676";
+				reg = <0x1a>;
+				def-addr = <0x1a>;
+				gmsl = "gmsl";
+				pinctrl-names = "default";
+				pinctrl-0 = <&pinctrl_csi0_pwn>, <&pinctrl_csi0_rst>, <&pinctrl_csi_mclk>;
+				clocks = <&clk IMX8MP_CLK_IPP_DO_CLKO2>;
+				clock-names = "csi_mclk";
+				gmsl-ser-device = <&framos_ser_prim_a>;
+				gmsl-dser-device = <&framos_dser_a>;
+				csi_id = <0>;
+				mipi_csi;
+				status = "okay";
+
+				port {
+					imx676_mipi_0_ep: endpoint {
+						remote-endpoint = <&mipi_csi0_ep>;
+						data-lanes = <1 2 3 4>;
+						clock-lanes = <0>;
+						max-pixel-frequency = /bits/ 64 <500000000>;
+					};
+				};
+				gmsl-link {
+					src-csi-port = "b";
+					dst-csi-port = "a";
+					serdes-csi-link = "a";
+					csi-mode = "1x4";
+					st-vc = <0>;
+					vc-id = <0>;
+					num-lanes = <4>;
+					streams = "raw12";
+				};
+			};
+		};
+	};
+};
+
+&i2c3 {
+	clock-frequency = <100000>;
+	pinctrl-names = "default";
+	pinctrl-0 = <&pinctrl_i2c3>;
+	status = "okay";
+
+	ov5640_1: ov5640_mipi@3c {
+		status = "disabled";
+	};
+};
+
+&cameradev {
+	status = "okay";
+};
+
+&isi_0 {
+	status = "disabled";
+};
+
+&isi_1 {
+	status = "disabled";
+};
+
+&isp_0 {
+	status = "okay";
+};
+
+&dewarp {
+	status = "okay";
+};
+
+&mipi_csi_0 {
+	status = "okay";
+
+	port {
+		mipi_csi0_ep: endpoint {
+			remote-endpoint = <&imx676_mipi_0_ep>;
+			data-lanes = <4>;
+			csis-hs-settle = <13>;
+			csis-clk-settle = <2>;
+			csis-wclk;
+		};
+	};
+};
+
+&mipi_csi_1 {
+	status = "disabled";
+};
diff --git a/arch/arm64/boot/dts/freescale/imx8mp-evk-imx676.dts b/arch/arm64/boot/dts/freescale/imx8mp-evk-imx676.dts
new file mode 100644
index 000000000000..87b187cf314f
--- /dev/null
+++ b/arch/arm64/boot/dts/freescale/imx8mp-evk-imx676.dts
@@ -0,0 +1,112 @@
+// SPDX-License-Identifier: (GPL-2.0+ OR MIT)
+/*
+ * Copyright 2020 NXP
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License
+ * as published by the Free Software Foundation; either version 2
+ * of the License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ */
+
+/dts-v1/;
+
+#include "imx8mp-evk.dts"
+
+#define CAMERA_I2C_MUX_BUS(x) (0x1E + x)
+
+&i2c2 {
+	/delete-node/ov5640_mipi@3c;
+
+	tca9548_70_CSI1: tca9548@70 {
+		compatible = "nxp,pca9548";
+		reg = <0x70>;
+		#address-cells = <1>;
+		#size-cells = <0>;
+		skip_mux_detect;
+		force_bus_start = <CAMERA_I2C_MUX_BUS(0)>;
+
+		i2c@0 {
+			reg = <0>;
+			i2c-mux,deselect-on-exit;
+			#address-cells = <1>;
+			#size-cells = <0>;
+			status = "okay";
+
+			imx676_0: imx676_mipi@1a {
+				compatible = "framos,imx676";
+				reg = <0x1a>;
+				pinctrl-names = "default";
+				pinctrl-0 = <&pinctrl_csi0_pwn>, <&pinctrl_csi0_rst>, <&pinctrl_csi_mclk>;
+				clocks = <&clk IMX8MP_CLK_IPP_DO_CLKO2>;
+				clock-names = "csi_mclk";
+				csi_id = <0>;
+				rst-gpios = <&gpio1 6 GPIO_ACTIVE_LOW>;
+				mipi_csi;
+				status = "okay";
+
+				port {
+					imx676_mipi_0_ep: endpoint {
+						remote-endpoint = <&mipi_csi0_ep>;
+						data-lanes = <1 2 3 4>;
+						clock-lanes = <0>;
+						max-pixel-frequency = /bits/ 64 <500000000>;
+					};
+				};
+			};
+		};
+	};
+};
+
+&i2c3 {
+	clock-frequency = <100000>;
+	pinctrl-names = "default";
+	pinctrl-0 = <&pinctrl_i2c3>;
+	status = "okay";
+
+	ov5640_1: ov5640_mipi@3c {
+		status = "disabled";
+	};
+};
+
+&cameradev {
+	status = "okay";
+};
+
+&isi_0 {
+	status = "disabled";
+};
+
+&isi_1 {
+	status = "disabled";
+};
+
+&isp_0 {
+	status = "okay";
+};
+
+&dewarp {
+	status = "okay";
+};
+
+&mipi_csi_0 {
+	status = "okay";
+
+	port {
+		mipi_csi0_ep: endpoint {
+			remote-endpoint = <&imx676_mipi_0_ep>;
+			data-lanes = <4>;
+			csis-hs-settle = <13>;
+			csis-clk-settle = <2>;
+			csis-wclk;
+		};
+	};
+};
+
+&mipi_csi_1 {
+	status = "disabled";
+};
diff --git a/arch/arm64/boot/dts/freescale/imx8mp-evk-imx678-dual-gmsl.dts b/arch/arm64/boot/dts/freescale/imx8mp-evk-imx678-dual-gmsl.dts
new file mode 100644
index 000000000000..c53a8c66ef85
--- /dev/null
+++ b/arch/arm64/boot/dts/freescale/imx8mp-evk-imx678-dual-gmsl.dts
@@ -0,0 +1,245 @@
+// SPDX-License-Identifier: (GPL-2.0+ OR MIT)
+/*
+ * Copyright 2020 NXP
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License
+ * as published by the Free Software Foundation; either version 2
+ * of the License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ */
+
+/dts-v1/;
+
+#include "imx8mp-evk.dts"
+
+#define CAMERA_I2C_MUX_BUS(x) (0x1E + x)
+
+/* TCA6408 Pxx bus-port define*/
+#define SLAMODE0	0
+
+/delete-node/ &flexcan2; /* flexcan2 enable signal in collision with GPIO expander on Framos FPA */
+
+&i2c2 {
+	/delete-node/ov5640_mipi@3c;
+
+	tca9548_70_CSI1: tca9548@70 {
+		compatible = "nxp,pca9548";
+		reg = <0x70>;
+		#address-cells = <1>;
+		#size-cells = <0>;
+		skip_mux_detect;
+		force_bus_start = <CAMERA_I2C_MUX_BUS(0)>;
+
+		i2c@0 {
+			reg = <0>;
+			i2c-mux,deselect-on-exit;
+			#address-cells = <1>;
+			#size-cells = <0>;
+			status = "okay";
+
+			framos_dser_a: max96792_a@6a {
+				compatible = "framos,max96792";
+				reg = <0x6a>;
+				csi-mode = "2x4";
+				max-src = <1>;
+				reset-gpios = <&gpio1 6 GPIO_ACTIVE_LOW>;
+			};
+			framos_ser_prim_a: max96793_prim_a@42 { /* i2c serializer physical address */
+				compatible = "framos,max96793";
+				reg = <0x42>;
+				gmsl-dser-device = <&framos_dser_a>;
+				is-prim-ser;
+			};
+
+			imx678_0: imx678_mipi@1a {
+				compatible = "framos,imx678";
+				reg = <0x1a>;
+				def-addr = <0x1a>;
+				gmsl = "gmsl";
+				pinctrl-names = "default";
+				pinctrl-0 = <&pinctrl_csi0_pwn>, <&pinctrl_csi0_rst>, <&pinctrl_csi_mclk>;
+				clocks = <&clk IMX8MP_CLK_IPP_DO_CLKO2>;
+				clock-names = "csi_mclk";
+				gmsl-ser-device = <&framos_ser_prim_a>;
+				gmsl-dser-device = <&framos_dser_a>;
+				csi_id = <0>;
+				mipi_csi;
+				status = "okay";
+
+				port {
+					imx678_mipi_0_ep: endpoint {
+						remote-endpoint = <&mipi_csi0_ep>;
+						data-lanes = <1 2 3 4>;
+						clock-lanes = <0>;
+						max-pixel-frequency = /bits/ 64 <266000000>;
+					};
+				};
+				gmsl-link {
+					src-csi-port = "b";
+					dst-csi-port = "a";
+					serdes-csi-link = "a";
+					csi-mode = "1x4";
+					st-vc = <0>;
+					vc-id = <0>;
+					num-lanes = <4>;
+					streams = "raw12";
+				};
+			};
+		};
+	};
+};
+
+&i2c3 {
+	clock-frequency = <100000>;
+	pinctrl-names = "default";
+	pinctrl-0 = <&pinctrl_i2c3>;
+	status = "okay";
+
+	/delete-node/gpio@20;
+	/delete-node/ov5640_mipi@3c;
+
+	tca9548_70_CSI2: tca9548@70 {
+		compatible = "nxp,pca9548";
+		reg = <0x70>;
+		#address-cells = <1>;
+		#size-cells = <0>;
+		skip_mux_detect;
+		force_bus_start = <CAMERA_I2C_MUX_BUS(0)>;
+
+		i2c@0 {
+			reg = <0>;
+			i2c-mux,deselect-on-exit;
+			#address-cells = <1>;
+			#size-cells = <0>;
+			status = "okay";
+
+			framos_dser_b: max96792_b@6a {
+				compatible = "framos,max96792";
+				reg = <0x6a>;
+				csi-mode = "2x4";
+				max-src = <1>;
+				reset-gpios = <&gpio1 6 GPIO_ACTIVE_LOW>;
+			};
+			framos_ser_prim_b: max96793_prim_b@42 { /* i2c serializer physical address */
+				compatible = "framos,max96793";
+				reg = <0x42>;
+				gmsl-dser-device = <&framos_dser_b>;
+				is-prim-ser;
+			};
+
+			tca6408_21_i2c0: tca6408@21 {
+				compatible = "ti,tca6408";
+				gpio-controller;
+				#gpio-cells = <2>;
+				reg = <0x21>;
+				status = "okay";
+				/*
+				 * P2: SLAMODE0
+				 */
+				tca6408_21_i2c0_slamode0 {
+					gpio-hog;
+					output-high;
+					gpios = <SLAMODE0 0>;
+					label = "slamode0";
+					status = "okay";
+				};
+			};
+
+			imx678_1: imx678_mipi@10 {
+				compatible = "framos,imx678";
+				reg = <0x10>;
+				def-addr = <0x10>;
+				gmsl = "gmsl";
+				clocks = <&clk IMX8MP_CLK_IPP_DO_CLKO2>;
+				clock-names = "csi_mclk";
+				gmsl-ser-device = <&framos_ser_prim_b>;
+				gmsl-dser-device = <&framos_dser_b>;
+				csi_id = <1>;
+				rst-gpios = <&gpio1 6 GPIO_ACTIVE_LOW>;
+				status = "okay";
+
+				port {
+					imx678_mipi_1_ep: endpoint {
+						remote-endpoint = <&mipi_csi1_ep>;
+						data-lanes = <1 2 3 4>;
+						clock-lanes = <0>;
+						max-pixel-frequency = /bits/ 64 <266000000>;
+					};
+				};
+				gmsl-link {
+					src-csi-port = "b";
+					dst-csi-port = "a";
+					serdes-csi-link = "a";
+					csi-mode = "1x4";
+					st-vc = <0>;
+					vc-id = <0>;
+					num-lanes = <4>;
+					streams = "raw12";
+				};
+			};
+		};
+	};
+};
+
+&cameradev {
+	status = "okay";
+};
+
+&isi_0 {
+	status = "disabled";
+};
+
+&isi_1 {
+	status = "disabled";
+};
+
+&isp_0 {
+	status = "okay";
+};
+
+&isp_1 {
+	status = "okay";
+};
+
+&dewarp {
+	status = "okay";
+};
+
+&mipi_csi_0 {
+	status = "okay";
+	clock-frequency = <266000000>;
+	assigned-clock-parents = <&clk IMX8MP_SYS_PLL1_266M>;
+	assigned-clock-rates = <266000000>;
+
+	port {
+		mipi_csi0_ep: endpoint {
+			remote-endpoint = <&imx678_mipi_0_ep>;
+			data-lanes = <4>;
+			csis-hs-settle = <13>;
+			csis-clk-settle = <2>;
+			csis-wclk;
+		};
+	};
+};
+
+&mipi_csi_1 {
+	#address-cells = <1>;
+	#size-cells = <0>;
+	status = "okay";
+
+	port@1 {
+		reg = <1>;
+		mipi_csi1_ep: endpoint {
+			remote-endpoint = <&imx678_mipi_1_ep>;
+			data-lanes = <4>;
+			csis-hs-settle = <13>;
+			csis-clk-settle = <2>;
+			csis-wclk;
+		};
+	};
+};
diff --git a/arch/arm64/boot/dts/freescale/imx8mp-evk-imx678-dual.dts b/arch/arm64/boot/dts/freescale/imx8mp-evk-imx678-dual.dts
new file mode 100644
index 000000000000..fccb00ecc630
--- /dev/null
+++ b/arch/arm64/boot/dts/freescale/imx8mp-evk-imx678-dual.dts
@@ -0,0 +1,189 @@
+// SPDX-License-Identifier: (GPL-2.0+ OR MIT)
+/*
+ * Copyright 2020 NXP
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License
+ * as published by the Free Software Foundation; either version 2
+ * of the License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ */
+
+/dts-v1/;
+
+#include "imx8mp-evk.dts"
+
+#define CAMERA_I2C_MUX_BUS(x) (0x1E + x)
+
+/* TCA6408 Pxx bus-port define*/
+#define SLAMODE0    0
+
+/delete-node/ &flexcan2; /* flexcan2 enable signal in collision with GPIO expander on Framos FPA */
+
+&i2c2 {
+	/delete-node/ov5640_mipi@3c;
+
+	tca9548_70_CSI1: tca9548@70 {
+        compatible = "nxp,pca9548";
+        reg = <0x70>;
+        #address-cells = <1>;
+        #size-cells = <0>;
+        skip_mux_detect;
+        force_bus_start = <CAMERA_I2C_MUX_BUS(0)>;
+
+		i2c@0 {
+            reg = <0>;
+            i2c-mux,deselect-on-exit;
+            #address-cells = <1>;
+            #size-cells = <0>;
+            status = "okay";
+
+            imx678_0: imx678_mipi@1a {
+				compatible = "framos,imx678";
+				reg = <0x1a>;
+				pinctrl-names = "default";
+				pinctrl-0 = <&pinctrl_csi0_pwn>, <&pinctrl_csi0_rst>, <&pinctrl_csi_mclk>;
+				clocks = <&clk IMX8MP_CLK_IPP_DO_CLKO2>;
+				clock-names = "csi_mclk";
+				csi_id = <0>;
+				rst-gpios = <&gpio1 6 GPIO_ACTIVE_LOW>;
+				status = "okay";
+
+				port {
+					imx678_mipi_0_ep: endpoint {
+						remote-endpoint = <&mipi_csi0_ep>;
+						data-lanes = <1 2 3 4>;
+						clock-lanes = <0>;
+						max-pixel-frequency = /bits/ 64 <266000000>;
+					};
+				};
+			};
+		};
+	};
+};
+
+&i2c3 {
+	clock-frequency = <100000>;
+	pinctrl-names = "default";
+	pinctrl-0 = <&pinctrl_i2c3>;
+	status = "okay";
+
+	/delete-node/gpio@20;
+	/delete-node/ov5640_mipi@3c;
+
+	tca9548_70_CSI2: tca9548@70 {
+		compatible = "nxp,pca9548";
+		reg = <0x70>;
+		#address-cells = <1>;
+		#size-cells = <0>;
+		skip_mux_detect;
+		force_bus_start = <CAMERA_I2C_MUX_BUS(0)>;
+
+		i2c@0 {
+			reg = <0>;
+			i2c-mux,deselect-on-exit;
+			#address-cells = <1>;
+			#size-cells = <0>;
+			status = "okay";
+
+			tca6408_20_i2c0: tca6408@20 {
+				compatible = "ti,tca6408";
+				gpio-controller;
+				#gpio-cells = <2>;
+				reg = <0x20>;
+				status = "okay";
+				/*
+				 * P2: SLAMODE0
+				 */
+				tca6408_20_i2c0_slamode0 {
+					gpio-hog;
+					output-high;
+					gpios = <SLAMODE0 0>;
+					label = "slamode0";
+					status = "okay";
+				};
+			};
+
+			imx678_1: imx678_mipi@10 {
+				compatible = "framos,imx678";
+				reg = <0x10>;
+				clocks = <&clk IMX8MP_CLK_IPP_DO_CLKO2>;
+				clock-names = "csi_mclk";
+				csi_id = <1>;
+				rst-gpios = <&gpio1 6 GPIO_ACTIVE_LOW>;
+				status = "okay";
+
+				port {
+					imx678_mipi_1_ep: endpoint {
+						remote-endpoint = <&mipi_csi1_ep>;
+						data-lanes = <1 2 3 4>;
+						clock-lanes = <0>;
+						max-pixel-frequency = /bits/ 64 <266000000>;
+					};
+				};
+			};
+		};
+	};
+};
+
+&cameradev {
+	status = "okay";
+};
+
+&isi_0 {
+	status = "disabled";
+};
+
+&isi_1 {
+	status = "disabled";
+};
+
+&isp_0 {
+	status = "okay";
+};
+
+&isp_1 {
+	status = "okay";
+};
+
+&dewarp {
+	status = "okay";
+};
+
+&mipi_csi_0 {
+	status = "okay";
+	clock-frequency = <266000000>;
+	assigned-clock-parents = <&clk IMX8MP_SYS_PLL1_266M>;
+	assigned-clock-rates = <266000000>;
+
+	port {
+		mipi_csi0_ep: endpoint {
+			remote-endpoint = <&imx678_mipi_0_ep>;
+			data-lanes = <4>;
+			csis-hs-settle = <13>;
+			csis-clk-settle = <2>;
+			csis-wclk;
+		};
+	};
+};
+
+&mipi_csi_1 {
+	#address-cells = <1>;
+	#size-cells = <0>;
+	status = "okay";
+
+	port@1 {
+		reg = <1>;
+		mipi_csi1_ep: endpoint {
+			remote-endpoint = <&imx678_mipi_1_ep>;
+			data-lanes = <4>;
+			csis-hs-settle = <13>;
+			csis-clk-settle = <2>;
+			csis-wclk;
+		};
+	};
+};
diff --git a/arch/arm64/boot/dts/freescale/imx8mp-evk-imx678-gmsl.dts b/arch/arm64/boot/dts/freescale/imx8mp-evk-imx678-gmsl.dts
new file mode 100644
index 000000000000..383a4a7bcf8e
--- /dev/null
+++ b/arch/arm64/boot/dts/freescale/imx8mp-evk-imx678-gmsl.dts
@@ -0,0 +1,139 @@
+// SPDX-License-Identifier: (GPL-2.0+ OR MIT)
+/*
+ * Copyright 2020 NXP
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License
+ * as published by the Free Software Foundation; either version 2
+ * of the License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ */
+
+/dts-v1/;
+
+#include "imx8mp-evk.dts"
+
+#define CAMERA_I2C_MUX_BUS(x) (0x1E + x)
+
+&i2c2 {
+	/delete-node/ov5640_mipi@3c;
+
+	tca9548_70_CSI1: tca9548@70 {
+		compatible = "nxp,pca9548";
+		reg = <0x70>;
+		#address-cells = <1>;
+		#size-cells = <0>;
+		skip_mux_detect;
+		force_bus_start = <CAMERA_I2C_MUX_BUS(0)>;
+
+		i2c@0 {
+			reg = <0>;
+			i2c-mux,deselect-on-exit;
+			#address-cells = <1>;
+			#size-cells = <0>;
+			status = "okay";
+
+			framos_dser_a: max96792_a@6a {
+				compatible = "framos,max96792";
+				reg = <0x6a>;
+				csi-mode = "2x4";
+				max-src = <1>;
+				reset-gpios = <&gpio1 6 GPIO_ACTIVE_LOW>;
+			};
+			framos_ser_prim_a: max96793_prim_a@42 { /* i2c serializer physical address */
+				compatible = "framos,max96793";
+				reg = <0x42>;
+				gmsl-dser-device = <&framos_dser_a>;
+				is-prim-ser;
+			};
+
+			imx678_0: imx678_mipi@1a {
+				compatible = "framos,imx678";
+				reg = <0x1a>;
+				def-addr = <0x1a>;
+				gmsl = "gmsl";
+				pinctrl-names = "default";
+				pinctrl-0 = <&pinctrl_csi0_pwn>, <&pinctrl_csi0_rst>, <&pinctrl_csi_mclk>;
+				clocks = <&clk IMX8MP_CLK_IPP_DO_CLKO2>;
+				clock-names = "csi_mclk";
+				gmsl-ser-device = <&framos_ser_prim_a>;
+				gmsl-dser-device = <&framos_dser_a>;
+				csi_id = <0>;
+				mipi_csi;
+				status = "okay";
+
+				port {
+					imx678_mipi_0_ep: endpoint {
+						remote-endpoint = <&mipi_csi0_ep>;
+						data-lanes = <1 2 3 4>;
+						clock-lanes = <0>;
+						max-pixel-frequency = /bits/ 64 <500000000>;
+					};
+				};
+				gmsl-link {
+					src-csi-port = "b";
+					dst-csi-port = "a";
+					serdes-csi-link = "a";
+					csi-mode = "1x4";
+					st-vc = <0>;
+					vc-id = <0>;
+					num-lanes = <4>;
+					streams = "raw12";
+				};
+			};
+		};
+	};
+};
+
+&i2c3 {
+	clock-frequency = <100000>;
+	pinctrl-names = "default";
+	pinctrl-0 = <&pinctrl_i2c3>;
+	status = "okay";
+
+	ov5640_1: ov5640_mipi@3c {
+		status = "disabled";
+	};
+};
+
+&cameradev {
+	status = "okay";
+};
+
+&isi_0 {
+	status = "disabled";
+};
+
+&isi_1 {
+	status = "disabled";
+};
+
+&isp_0 {
+	status = "okay";
+};
+
+&dewarp {
+	status = "okay";
+};
+
+&mipi_csi_0 {
+	status = "okay";
+
+	port {
+		mipi_csi0_ep: endpoint {
+			remote-endpoint = <&imx678_mipi_0_ep>;
+			data-lanes = <4>;
+			csis-hs-settle = <13>;
+			csis-clk-settle = <2>;
+			csis-wclk;
+		};
+	};
+};
+
+&mipi_csi_1 {
+	status = "disabled";
+};
diff --git a/arch/arm64/boot/dts/freescale/imx8mp-evk-imx678.dts b/arch/arm64/boot/dts/freescale/imx8mp-evk-imx678.dts
new file mode 100644
index 000000000000..99736f21dafc
--- /dev/null
+++ b/arch/arm64/boot/dts/freescale/imx8mp-evk-imx678.dts
@@ -0,0 +1,112 @@
+// SPDX-License-Identifier: (GPL-2.0+ OR MIT)
+/*
+ * Copyright 2020 NXP
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License
+ * as published by the Free Software Foundation; either version 2
+ * of the License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ */
+
+/dts-v1/;
+
+#include "imx8mp-evk.dts"
+
+#define CAMERA_I2C_MUX_BUS(x) (0x1E + x)
+
+&i2c2 {
+	/delete-node/ov5640_mipi@3c;
+
+	tca9548_70_CSI1: tca9548@70 {
+		compatible = "nxp,pca9548";
+		reg = <0x70>;
+		#address-cells = <1>;
+		#size-cells = <0>;
+		skip_mux_detect;
+		force_bus_start = <CAMERA_I2C_MUX_BUS(0)>;
+
+		i2c@0 {
+			reg = <0>;
+			i2c-mux,deselect-on-exit;
+			#address-cells = <1>;
+			#size-cells = <0>;
+			status = "okay";
+
+			imx678_0: imx678_mipi@1a {
+				compatible = "framos,imx678";
+				reg = <0x1a>;
+				pinctrl-names = "default";
+				pinctrl-0 = <&pinctrl_csi0_pwn>, <&pinctrl_csi0_rst>, <&pinctrl_csi_mclk>;
+				clocks = <&clk IMX8MP_CLK_IPP_DO_CLKO2>;
+				clock-names = "csi_mclk";
+				csi_id = <0>;
+				rst-gpios = <&gpio1 6 GPIO_ACTIVE_LOW>;
+				mipi_csi;
+				status = "okay";
+
+				port {
+					imx678_mipi_0_ep: endpoint {
+						remote-endpoint = <&mipi_csi0_ep>;
+						data-lanes = <1 2 3 4>;
+						clock-lanes = <0>;
+						max-pixel-frequency = /bits/ 64 <500000000>;
+					};
+				};
+			};
+		};
+	};
+};
+
+&i2c3 {
+	clock-frequency = <100000>;
+	pinctrl-names = "default";
+	pinctrl-0 = <&pinctrl_i2c3>;
+	status = "okay";
+
+	ov5640_1: ov5640_mipi@3c {
+		status = "disabled";
+	};
+};
+
+&cameradev {
+	status = "okay";
+};
+
+&isi_0 {
+	status = "disabled";
+};
+
+&isi_1 {
+	status = "disabled";
+};
+
+&isp_0 {
+	status = "okay";
+};
+
+&dewarp {
+	status = "okay";
+};
+
+&mipi_csi_0 {
+	status = "okay";
+
+	port {
+		mipi_csi0_ep: endpoint {
+			remote-endpoint = <&imx678_mipi_0_ep>;
+			data-lanes = <4>;
+			csis-hs-settle = <13>;
+			csis-clk-settle = <2>;
+			csis-wclk;
+		};
+	};
+};
+
+&mipi_csi_1 {
+	status = "disabled";
+};
diff --git a/arch/arm64/boot/dts/freescale/imx8mp-evk-imx900-dual-gmsl.dts b/arch/arm64/boot/dts/freescale/imx8mp-evk-imx900-dual-gmsl.dts
new file mode 100644
index 000000000000..b2d98f56ec85
--- /dev/null
+++ b/arch/arm64/boot/dts/freescale/imx8mp-evk-imx900-dual-gmsl.dts
@@ -0,0 +1,235 @@
+// SPDX-License-Identifier: (GPL-2.0+ OR MIT)
+/*
+ * Copyright 2024 Framos
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License
+ * as published by the Free Software Foundation; either version 2
+ * of the License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ */
+
+/dts-v1/;
+
+#include "imx8mp-evk.dts"
+
+#define CAMERA_I2C_MUX_BUS(x) (0x1E + x)
+
+/* TCA6408 Pxx bus-port define*/
+#define SLAMODE0	0
+
+/delete-node/ &flexcan2; //flexcan2 enable signal in collision with GPIO expander on Framos FPA
+
+&i2c2 {
+	/delete-node/ov5640_mipi@3c;
+
+	tca9548_70_CSI1: tca9548@70 {
+		compatible = "nxp,pca9548";
+		reg = <0x70>;
+		#address-cells = <1>;
+		#size-cells = <0>;
+		skip_mux_detect;
+		force_bus_start = <CAMERA_I2C_MUX_BUS(0)>;
+
+		i2c@0 {
+			reg = <0>;
+			i2c-mux,deselect-on-exit;
+			#address-cells = <1>;
+			#size-cells = <0>;
+			status = "okay";
+
+			framos_dser_a: max96792_a@6a {
+				compatible = "framos,max96792";
+				reg = <0x6a>;
+				csi-mode = "2x4";
+				max-src = <1>;
+				reset-gpios = <&gpio1 6 GPIO_ACTIVE_LOW>;
+			};
+			framos_ser_prim_a: max96793_prim_a@42 { //i2c serializer physical address
+				compatible = "framos,max96793";
+				reg = <0x42>;
+				gmsl-dser-device = <&framos_dser_a>;
+				is-prim-ser;
+			};
+
+			imx900_0: imx900_mipi@1a {
+				compatible = "framos,imx900";
+				reg = <0x1a>;
+				def-addr = <0x1a>;
+				gmsl = "gmsl";
+				pinctrl-names = "default";
+				pinctrl-0 = <&pinctrl_csi0_pwn>, <&pinctrl_csi0_rst>, <&pinctrl_csi_mclk>;
+				clocks = <&clk IMX8MP_CLK_IPP_DO_CLKO2>;
+				clock-names = "csi_mclk";
+				gmsl-ser-device = <&framos_ser_prim_a>;
+				gmsl-dser-device = <&framos_dser_a>;
+				csi_id = <0>;
+				mipi_csi;
+				status = "okay";
+
+				port {
+					imx900_mipi_0_ep: endpoint {
+						remote-endpoint = <&mipi_csi0_ep>;
+						data-lanes = <1 2 3 4>;
+						clock-lanes = <0>;
+						max-pixel-frequency = /bits/ 64 <266000000>;
+					};
+				};
+				gmsl-link {
+					src-csi-port = "b";
+					dst-csi-port = "a";
+					serdes-csi-link = "a";
+					csi-mode = "1x4";
+					st-vc = <0>;
+					vc-id = <0>;
+					num-lanes = <4>;
+					streams = "raw12";
+				};
+			};
+		};
+	};
+};
+
+&i2c3 {
+	clock-frequency = <100000>;
+	pinctrl-names = "default";
+	pinctrl-0 = <&pinctrl_i2c3>;
+	status = "okay";
+
+	/delete-node/gpio@20;
+	/delete-node/ov5640_mipi@3c;
+
+	tca9548_70_CSI2: tca9548@70 {
+		compatible = "nxp,pca9548";
+		reg = <0x70>;
+		#address-cells = <1>;
+		#size-cells = <0>;
+		skip_mux_detect;
+		force_bus_start = <CAMERA_I2C_MUX_BUS(0)>;
+
+		i2c@0 {
+			reg = <0>;
+			i2c-mux,deselect-on-exit;
+			#address-cells = <1>;
+			#size-cells = <0>;
+			status = "okay";
+
+			framos_dser_b: max96792_b@6a {
+				compatible = "framos,max96792";
+				reg = <0x6a>;
+				csi-mode = "2x4";
+				max-src = <1>;
+				reset-gpios = <&gpio1 6 GPIO_ACTIVE_LOW>;
+			};
+			framos_ser_prim_b: max96793_prim_b@42 { //i2c serializer physical address
+				compatible = "framos,max96793";
+				reg = <0x42>;
+				gmsl-dser-device = <&framos_dser_b>;
+				is-prim-ser;
+			};
+
+			tca6408_20_i2c0: tca6408@20 {
+				compatible = "ti,tca6408";
+				gpio-controller;
+				#gpio-cells = <2>;
+				reg = <0x20>;
+				status = "okay";
+			};
+
+			imx900_1: imx900_mipi@36 {
+				compatible = "framos,imx900";
+				reg = <0x36>;
+				def-addr = <0x36>;
+				gmsl = "gmsl";
+				clocks = <&clk IMX8MP_CLK_IPP_DO_CLKO2>;
+				clock-names = "csi_mclk";
+				gmsl-ser-device = <&framos_ser_prim_b>;
+				gmsl-dser-device = <&framos_dser_b>;
+				csi_id = <1>;
+				status = "okay";
+
+				port {
+					imx900_mipi_1_ep: endpoint {
+						remote-endpoint = <&mipi_csi1_ep>;
+						data-lanes = <1 2 3 4>;
+						clock-lanes = <0>;
+						max-pixel-frequency = /bits/ 64 <266000000>;
+					};
+				};
+				gmsl-link {
+					src-csi-port = "b";
+					dst-csi-port = "a";
+					serdes-csi-link = "a";
+					csi-mode = "1x4";
+					st-vc = <0>;
+					vc-id = <0>;
+					num-lanes = <4>;
+					streams = "raw12";
+				};
+
+			};
+		};
+	};
+};
+
+&cameradev {
+	status = "okay";
+};
+
+&isi_0 {
+	status = "disabled";
+};
+
+&isi_1 {
+	status = "disabled";
+};
+
+&isp_0 {
+	status = "okay";
+};
+
+&isp_1 {
+	status = "okay";
+};
+
+&dewarp {
+	status = "okay";
+};
+
+&mipi_csi_0 {
+	status = "okay";
+	clock-frequency = <266000000>;
+	assigned-clock-parents = <&clk IMX8MP_SYS_PLL1_266M>;
+	assigned-clock-rates = <266000000>;
+
+	port {
+		mipi_csi0_ep: endpoint {
+			remote-endpoint = <&imx900_mipi_0_ep>;
+			data-lanes = <4>;
+			csis-hs-settle = <13>;
+			csis-clk-settle = <2>;
+			csis-wclk;
+		};
+	};
+};
+
+&mipi_csi_1 {
+	#address-cells = <1>;
+	#size-cells = <0>;
+	status = "okay";
+
+	port@1 {
+		reg = <1>;
+		mipi_csi1_ep: endpoint {
+			remote-endpoint = <&imx900_mipi_1_ep>;
+			data-lanes = <4>;
+			csis-hs-settle = <13>;
+			csis-clk-settle = <2>;
+			csis-wclk;
+		};
+	};
+};
diff --git a/arch/arm64/boot/dts/freescale/imx8mp-evk-imx900-dual.dts b/arch/arm64/boot/dts/freescale/imx8mp-evk-imx900-dual.dts
new file mode 100644
index 000000000000..4d6c13ce1f76
--- /dev/null
+++ b/arch/arm64/boot/dts/freescale/imx8mp-evk-imx900-dual.dts
@@ -0,0 +1,179 @@
+// SPDX-License-Identifier: (GPL-2.0+ OR MIT)
+/*
+ * Copyright 2024 Framos
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License
+ * as published by the Free Software Foundation; either version 2
+ * of the License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ */
+
+/dts-v1/;
+
+#include "imx8mp-evk.dts"
+
+#define CAMERA_I2C_MUX_BUS(x) (0x1E + x)
+
+/* TCA6408 Pxx bus-port define*/
+#define SLAMODE0	0
+
+/delete-node/ &flexcan2; //flexcan2 enable signal in collision with GPIO expander on Framos FPA
+
+&i2c2 {
+	/delete-node/ov5640_mipi@3c;
+
+	tca9548_70_CSI1: tca9548@70 {
+		compatible = "nxp,pca9548";
+		reg = <0x70>;
+		#address-cells = <1>;
+		#size-cells = <0>;
+		skip_mux_detect;
+		force_bus_start = <CAMERA_I2C_MUX_BUS(0)>;
+
+		i2c@0 {
+			reg = <0>;
+			i2c-mux,deselect-on-exit;
+			#address-cells = <1>;
+			#size-cells = <0>;
+			status = "okay";
+
+			imx900_0: imx900_mipi@1a {
+				compatible = "framos,imx900";
+				reg = <0x1a>;
+				pinctrl-names = "default";
+				pinctrl-0 = <&pinctrl_csi0_pwn>, <&pinctrl_csi0_rst>, <&pinctrl_csi_mclk>;
+				clocks = <&clk IMX8MP_CLK_IPP_DO_CLKO2>;
+				clock-names = "csi_mclk";
+				csi_id = <0>;
+				rst-gpios = <&gpio1 6 GPIO_ACTIVE_LOW>;
+				status = "okay";
+
+				port {
+					imx900_mipi_0_ep: endpoint {
+						remote-endpoint = <&mipi_csi0_ep>;
+						data-lanes = <1 2 3 4>;
+						clock-lanes = <0>;
+						max-pixel-frequency = /bits/ 64 <266000000>;
+					};
+				};
+			};
+		};
+	};
+};
+
+&i2c3 {
+	clock-frequency = <100000>;
+	pinctrl-names = "default";
+	pinctrl-0 = <&pinctrl_i2c3>;
+	status = "okay";
+
+	/delete-node/gpio@20;
+	/delete-node/ov5640_mipi@3c;
+
+	tca9548_70_CSI2: tca9548@70 {
+		compatible = "nxp,pca9548";
+		reg = <0x70>;
+		#address-cells = <1>;
+		#size-cells = <0>;
+		skip_mux_detect;
+		force_bus_start = <CAMERA_I2C_MUX_BUS(0)>;
+
+		i2c@0 {
+			reg = <0>;
+			i2c-mux,deselect-on-exit;
+			#address-cells = <1>;
+			#size-cells = <0>;
+			status = "okay";
+
+			tca6408_20_i2c0: tca6408@20 {
+				compatible = "ti,tca6408";
+				gpio-controller;
+				#gpio-cells = <2>;
+				reg = <0x20>;
+				status = "okay";
+			};
+
+			imx900_1: imx900_mipi@36 {
+				compatible = "framos,imx900";
+				reg = <0x36>;
+				clocks = <&clk IMX8MP_CLK_IPP_DO_CLKO2>;
+				clock-names = "csi_mclk";
+				csi_id = <1>;
+				rst-gpios = <&gpio1 6 GPIO_ACTIVE_LOW>;
+				status = "okay";
+
+				port {
+					imx900_mipi_1_ep: endpoint {
+						remote-endpoint = <&mipi_csi1_ep>;
+						data-lanes = <1 2 3 4>;
+						clock-lanes = <0>;
+						max-pixel-frequency = /bits/ 64 <266000000>;
+					};
+				};
+			};
+		};
+	};
+};
+
+&cameradev {
+	status = "okay";
+};
+
+&isi_0 {
+	status = "disabled";
+};
+
+&isi_1 {
+	status = "disabled";
+};
+
+&isp_0 {
+	status = "okay";
+};
+
+&isp_1 {
+	status = "okay";
+};
+
+&dewarp {
+	status = "okay";
+};
+
+&mipi_csi_0 {
+	status = "okay";
+	clock-frequency = <266000000>;
+	assigned-clock-parents = <&clk IMX8MP_SYS_PLL1_266M>;
+	assigned-clock-rates = <266000000>;
+
+	port {
+		mipi_csi0_ep: endpoint {
+			remote-endpoint = <&imx900_mipi_0_ep>;
+			data-lanes = <4>;
+			csis-hs-settle = <13>;
+			csis-clk-settle = <2>;
+			csis-wclk;
+		};
+	};
+};
+
+&mipi_csi_1 {
+	#address-cells = <1>;
+	#size-cells = <0>;
+	status = "okay";
+
+	port@1 {
+		reg = <1>;
+		mipi_csi1_ep: endpoint {
+			remote-endpoint = <&imx900_mipi_1_ep>;
+			data-lanes = <4>;
+			csis-hs-settle = <13>;
+			csis-clk-settle = <2>;
+			csis-wclk;
+		};
+	};
+};
diff --git a/arch/arm64/boot/dts/freescale/imx8mp-evk-imx900-gmsl.dts b/arch/arm64/boot/dts/freescale/imx8mp-evk-imx900-gmsl.dts
new file mode 100644
index 000000000000..3d8e2e9b6cda
--- /dev/null
+++ b/arch/arm64/boot/dts/freescale/imx8mp-evk-imx900-gmsl.dts
@@ -0,0 +1,139 @@
+// SPDX-License-Identifier: (GPL-2.0+ OR MIT)
+/*
+ * Copyright 2024 Framos
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License
+ * as published by the Free Software Foundation; either version 2
+ * of the License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ */
+
+/dts-v1/;
+
+#include "imx8mp-evk.dts"
+
+#define CAMERA_I2C_MUX_BUS(x) (0x1E + x)
+
+&i2c2 {
+	/delete-node/ov5640_mipi@3c;
+
+	tca9548_70_CSI1: tca9548@70 {
+		compatible = "nxp,pca9548";
+		reg = <0x70>;
+		#address-cells = <1>;
+		#size-cells = <0>;
+		skip_mux_detect;
+		force_bus_start = <CAMERA_I2C_MUX_BUS(0)>;
+
+		i2c@0 {
+			reg = <0>;
+			i2c-mux,deselect-on-exit;
+			#address-cells = <1>;
+			#size-cells = <0>;
+			status = "okay";
+
+			framos_dser_a: max96792_a@6a {
+				compatible = "framos,max96792";
+				reg = <0x6a>;
+				csi-mode = "2x4";
+				max-src = <1>;
+				reset-gpios = <&gpio1 6 GPIO_ACTIVE_LOW>;
+			};
+			framos_ser_prim_a: max96793_prim_a@42 { //i2c serializer physical address
+				compatible = "framos,max96793";
+				reg = <0x42>;
+				gmsl-dser-device = <&framos_dser_a>;
+				is-prim-ser;
+			};
+
+			imx900_0: imx900_mipi@1a {
+				compatible = "framos,imx900";
+				reg = <0x1a>;
+				def-addr = <0x1a>;
+				gmsl = "gmsl";
+				pinctrl-names = "default";
+				pinctrl-0 = <&pinctrl_csi0_pwn>, <&pinctrl_csi0_rst>, <&pinctrl_csi_mclk>;
+				clocks = <&clk IMX8MP_CLK_IPP_DO_CLKO2>;
+				clock-names = "csi_mclk";
+				gmsl-ser-device = <&framos_ser_prim_a>;
+				gmsl-dser-device = <&framos_dser_a>;
+				csi_id = <0>;
+				mipi_csi;
+				status = "okay";
+
+				port {
+					imx900_mipi_0_ep: endpoint {
+						remote-endpoint = <&mipi_csi0_ep>;
+						data-lanes = <1 2 3 4>;
+						clock-lanes = <0>;
+						max-pixel-frequency = /bits/ 64 <500000000>;
+					};
+				};
+				gmsl-link {
+					src-csi-port = "b";
+					dst-csi-port = "a";
+					serdes-csi-link = "a";
+					csi-mode = "1x4";
+					st-vc = <0>;
+					vc-id = <0>;
+					num-lanes = <4>;
+					streams = "raw12";
+				};
+			};
+		};
+	};
+};
+
+&i2c3 {
+	clock-frequency = <100000>;
+	pinctrl-names = "default";
+	pinctrl-0 = <&pinctrl_i2c3>;
+	status = "okay";
+
+	ov5640_1: ov5640_mipi@3c {
+		status = "disabled";
+	};
+};
+
+&cameradev {
+	status = "okay";
+};
+
+&isi_0 {
+	status = "disabled";
+};
+
+&isi_1 {
+	status = "disabled";
+};
+
+&isp_0 {
+	status = "okay";
+};
+
+&dewarp {
+	status = "okay";
+};
+
+&mipi_csi_0 {
+	status = "okay";
+
+	port {
+		mipi_csi0_ep: endpoint {
+			remote-endpoint = <&imx900_mipi_0_ep>;
+			data-lanes = <4>;
+			csis-hs-settle = <13>;
+			csis-clk-settle = <2>;
+			csis-wclk;
+		};
+	};
+};
+
+&mipi_csi_1 {
+	status = "disabled";
+};
diff --git a/arch/arm64/boot/dts/freescale/imx8mp-evk-imx900.dts b/arch/arm64/boot/dts/freescale/imx8mp-evk-imx900.dts
new file mode 100644
index 000000000000..ab4a900f2253
--- /dev/null
+++ b/arch/arm64/boot/dts/freescale/imx8mp-evk-imx900.dts
@@ -0,0 +1,112 @@
+// SPDX-License-Identifier: (GPL-2.0+ OR MIT)
+/*
+ * Copyright 2024 Framos
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License
+ * as published by the Free Software Foundation; either version 2
+ * of the License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ */
+
+/dts-v1/;
+
+#include "imx8mp-evk.dts"
+
+#define CAMERA_I2C_MUX_BUS(x) (0x1E + x)
+
+&i2c2 {
+	/delete-node/ov5640_mipi@3c;
+
+	tca9548_70_CSI1: tca9548@70 {
+		compatible = "nxp,pca9548";
+		reg = <0x70>;
+		#address-cells = <1>;
+		#size-cells = <0>;
+		skip_mux_detect;
+		force_bus_start = <CAMERA_I2C_MUX_BUS(0)>;
+
+		i2c@0 {
+			reg = <0>;
+			i2c-mux,deselect-on-exit;
+			#address-cells = <1>;
+			#size-cells = <0>;
+			status = "okay";
+
+			imx900_0: imx900_mipi@1a {
+				compatible = "framos,imx900";
+				reg = <0x1a>;
+				pinctrl-names = "default";
+				pinctrl-0 = <&pinctrl_csi0_pwn>, <&pinctrl_csi0_rst>, <&pinctrl_csi_mclk>;
+				clocks = <&clk IMX8MP_CLK_IPP_DO_CLKO2>;
+				clock-names = "csi_mclk";
+				csi_id = <0>;
+				rst-gpios = <&gpio1 6 GPIO_ACTIVE_LOW>;
+				mipi_csi;
+				status = "okay";
+
+				port {
+					imx900_mipi_0_ep: endpoint {
+						remote-endpoint = <&mipi_csi0_ep>;
+						data-lanes = <1 2 3 4>;
+						clock-lanes = <0>;
+						max-pixel-frequency = /bits/ 64 <500000000>;
+					};
+				};
+			};
+		};
+	};
+};
+
+&i2c3 {
+	clock-frequency = <100000>;
+	pinctrl-names = "default";
+	pinctrl-0 = <&pinctrl_i2c3>;
+	status = "okay";
+
+	ov5640_1: ov5640_mipi@3c {
+		status = "disabled";
+	};
+};
+
+&cameradev {
+	status = "okay";
+};
+
+&isi_0 {
+	status = "disabled";
+};
+
+&isi_1 {
+	status = "disabled";
+};
+
+&isp_0 {
+	status = "okay";
+};
+
+&dewarp {
+	status = "okay";
+};
+
+&mipi_csi_0 {
+	status = "okay";
+
+	port {
+		mipi_csi0_ep: endpoint {
+			remote-endpoint = <&imx900_mipi_0_ep>;
+			data-lanes = <4>;
+			csis-hs-settle = <13>;
+			csis-clk-settle = <2>;
+			csis-wclk;
+		};
+	};
+};
+
+&mipi_csi_1 {
+	status = "disabled";
+};
-- 
2.34.1

